/*!
 * accordion v2.0.0
 * https://github.com/alexspirgel/accordion
 */
var Accordion=function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=2)}([function(e,t,r){const a=(...arguments)=>{let e,t,r,n=arguments[0];for(e=1;e<arguments.length;e++)if(t=arguments[e],t!==n)if(r=Array.isArray(t),r||a.isPlainObject(t)){r&&!Array.isArray(n)?n=[]:r||a.isPlainObject(n)||(n={});for(const e in t)"__proto__"!==e&&(n[e]=a(n[e],t[e]))}else void 0!==t&&(n=t);return n};a.isPlainObject=e=>{const t={},r=t.toString,a=t.hasOwnProperty,n=a.toString,o=n.call(Object);if("[object Object]"!==r.call(e))return!1;const i=Object.getPrototypeOf(e);return!i||!a.call(i,"constructor")||"function"!=typeof i.constructor||n.call(i.constructor)===o},e.exports&&(e.exports=a)},function(e,t,r){const a=r(3);class ValidationError extends Error{constructor(...e){super(...e)}set modelPathManager(e){e instanceof a||(e=new a(e)),this._modelPathManager=e}get modelPathManager(){return this._modelPathManager}set inputPathManager(e){e instanceof a||(e=new a(e)),this._inputPathManager=e}get inputPathManager(){return this._inputPathManager}}e.exports=ValidationError},function(e,t,r){const a=r(7);e.exports=a},function(e,t,r){const a=r(0);e.exports=class DataPathManager{constructor(e,t=[]){this.data=e,this.path=t}set path(e){if(!Array.isArray(e))throw new Error("Path must be an array");this._path=e}get path(){return this._path}addPathSegment(e){this.path.push(e)}removePathSegment(){return this.path.splice(-1,1)[0]}get value(){let e=this.data;for(let t of this.path)try{e=e[t]}catch(e){return}return e}clone(e={}){e=a({},{data:!1,path:!0},e);let t=this.data;e.data&&"object"==typeof t&&(t=Array.isArray(t)?a([],t):a({},t));let r=this.path;return e.path&&(r=[...this.path]),new this.constructor(t,r)}}},function(e,t,r){const a=r(3),n=r(1),o=r(5),i=r(6);class Schema{static get validationMethods(){return[{property:"required",method:this.validateRequired},{property:"type",method:this.validateType},{property:"exactValue",method:this.validateExactValue},{property:"greaterThan",method:this.validateGreaterThan},{property:"greaterThanOrEqualTo",method:this.validateGreaterThanOrEqualTo},{property:"lessThan",method:this.validateLessThan},{property:"lessThanOrEqualTo",method:this.validateLessThanOrEqualTo},{property:"divisibleBy",method:this.validateDivisibleBy},{property:"notDivisibleBy",method:this.validateNotDivisibleBy},{property:"minimumCharacters",method:this.validateMinimumCharacters},{property:"maximumCharacters",method:this.validateMaximumCharacters},{property:"minimumLength",method:this.validateMinimumLength},{property:"maximumLength",method:this.validateMaximumLength},{property:"instanceOf",method:this.validateInstanceOf},{property:"allowUnvalidatedProperties",method:this.validateAllowUnvalidatedProperties},{property:"custom",method:this.validateCustom},{property:"allPropertySchema",method:this.validateAllPropertySchema},{property:"propertySchema",method:this.validatePropertySchema}]}static validateRequired(e,t){if(!0===e.value&&(void 0===t.value||null===t.value))throw new n("Property 'required' validation failed. The input must not be null or undefined.");return!0}static validateType(e,t){if("number"===e.value){if("number"==typeof t.value&&!isNaN(t.value))return!0}else if("object"===e.value){if("object"==typeof t.value&&!Array.isArray(t.value)&&null!==t.value)return!0}else if("array"===e.value){if(Array.isArray(t.value))return!0}else if(("boolean"===e.value||"string"===e.value||"function"===e.value)&&typeof t.value===e.value)return!0;throw new n("Property 'type' validation failed. The input type must match.")}static validateExactValue(e,t){if(Array.isArray(e.value)){for(const r of e.value)if(t.value===r)return!0}else if(t.value===e.value)return!0;throw new n("Property 'exactValue' validation failed. The input must be an exact match of the value or one of the values in an array of values.")}static validateGreaterThan(e,t){if(t.value>e.value)return!0;throw new n("Property 'greaterThan' validation failed. The input must be greater than the value.")}static validateGreaterThanOrEqualTo(e,t){if(t.value>=e.value)return!0;throw new n("Property 'greaterThanOrEqualTo' validation failed. The input must be greater than or equal to the value.")}static validateLessThan(e,t){if(t.value<e.value)return!0;throw new n("Property 'lessThan' validation failed. The input must be less than the value.")}static validateLessThanOrEqualTo(e,t){if(t.value<=e.value)return!0;throw new n("Property 'lessThanOrEqualTo' validation failed. The input must be less than or equal to the value.")}static validateDivisibleBy(e,t){if(Array.isArray(e.value)){for(const r of e.value)if(t.value%r==0)return!0}else if(t.value%e.value==0)return!0;throw new n("Property 'divisibleBy' validation failed. The input must be divisible by the value or one of the values in an array of values.")}static validateNotDivisibleBy(e,t){let r=!1;if(Array.isArray(e.value))for(const a of e.value)t.value%a==0&&(r=!0);else t.value%e.value==0&&(r=!0);if(r||isNaN(t.value))throw new n("Property 'notDivisibleBy' validation failed. The input must not be divisible by the value or one of the values in an array of values.");return!0}static validateMinimumCharacters(e,t){if(t.value.length>=e.value)return!0;throw new n("Property 'minimumCharacters' validation failed. The input must have a character count greater than or equal to the value.")}static validateMaximumCharacters(e,t){if(t.value.length<=e.value)return!0;throw new n("Property 'maximumCharacters' validation failed. The input must have a character count less than or equal to the value.")}static validateMinimumLength(e,t){if(t.value.length>=e.value)return!0;throw new n("Property 'minimumLength' validation failed. The input must have a length greater than or equal to the value.")}static validateMaximumLength(e,t){if(t.value.length<=e.value)return!0;throw new n("Property 'maximumLength' validation failed. The input must have a length less than or equal to the value.")}static validateInstanceOf(e,t){if(Array.isArray(e.value)){for(const r of e.value)if(t.value instanceof r)return!0}else if(t.value instanceof e.value)return!0;throw new n("Property 'instanceOf' validation failed. The input must be an instance of the value or one of the values in an array of values.")}static validateAllowUnvalidatedProperties(e,t){if(!1===e.value){e.removePathSegment(),e.addPathSegment("propertySchema");let r=[];e.value&&(r=Object.keys(e.value));for(const e in t.value)if(!r.includes(e))throw new n(`Property 'allowUnvalidatedProperties' validation failed. '${e}' is not defined in the 'propertySchema' validation property.`)}return!0}static validateCustom(e,t){const r=t.clone({data:!0,path:!0});return e.value(r)}static validateAllPropertySchema(e,t){const r=new Schema(e.clone(),!1);for(const e in t.value){const a=t.clone();a.addPathSegment(e);const n=r.validate(a,"array");if(!0!==n)return n}return!0}static validatePropertySchema(e,t){for(const r in e.value){const a=e.clone();a.addPathSegment(r);const n=new Schema(a,!1),o=t.clone();o.addPathSegment(r);const i=n.validate(o,"array");if(!0!==i)return i}return!0}constructor(e={},t=!0){this.selfValidate=t,this.modelPathManager=e}set modelPathManager(e){if(e instanceof a||(e=new a(e)),this._modelPathManager=e,this.selfValidate){new Schema(i,!1).validate(this.modelPathManager)}}get modelPathManager(){return this._modelPathManager}validate(e,t="throw"){e instanceof a||(e=new a(e));let r=new o;if(Array.isArray(this.modelPathManager.value))for(let t=0;t<this.modelPathManager.value.length;t++){const a=this.modelPathManager.clone();a.addPathSegment(t);const n=this._validate(a,e);if(!0===n)return!0;r.addError(n)}else{const t=this._validate(this.modelPathManager,e);if(!0===t)return!0;r.addError(t)}if("throw"===t)throw new Error(r.generateFormattedMessage());return"array"===t?r.errors:"boolean"!==t&&void 0}_validate(e,t){if(!0!==e.value.required&&(void 0===t.value||null===t.value))return!0;for(const r of this.constructor.validationMethods)if(e.value.hasOwnProperty(r.property)){const a=e.clone();a.addPathSegment(r.property);try{const e=r.method(a,t);if(!0!==e)return e}catch(e){if(e instanceof n)return e.modelPathManager||(e.modelPathManager=a),e.inputPathManager||(e.inputPathManager=t),e;throw e}}return!0}}Schema.ValidationError=n,e.exports=Schema},function(e,t,r){const a=r(1);e.exports=class ValidationErrors{constructor(){this.errors=[]}addError(e){if(Array.isArray(e))for(const t of e)this.addError(t);else{if(!(e instanceof a))throw new Error("Passed 'error' must be an instance of 'Schema.ValidationError'.");this.errors.push(e)}}generateFormattedMessage(){let e="Schema errors:\n";for(const t of this.errors){let r="root";t.inputPathManager.path.length>0&&(r=t.inputPathManager.path.map(e=>"['"+e+"']"),r=r.join(""));let a="root";t.modelPathManager.path.length>0&&(a=t.modelPathManager.path.map(e=>"['"+e+"']"),a=a.join("")),e+=`\nInput Path: ${r}\nModel Path: ${a}\nMessage: ${t.message}\n`}return e}}},function(e,t,r){const a=r(0),n=r(1),o=e=>(Array.isArray(e)||(e=[e]),t=>{const r=t.removePathSegment();if(void 0===r||e.includes(t.value.type))return!0;{let t="";for(let r=0;r<e.length;r++){const a=e[r];0===r?t+=`'${a}'`:r<e.length-1?t+=`, '${a}'`:(e.length>2&&(t+=","),t+=` or '${a}'`)}throw new n(`The validation property '${r}' can only belong to a model with a type of ${t}.`)}}),i={required:{type:"boolean"},type:{type:"string",exactValue:["boolean","number","string","array","object","function"]},exactValue:{custom:o(["boolean","number","string"])},greaterThan:{type:"number",custom:o("number")},greaterThanOrEqualTo:{type:"number",custom:o("number")},lessThan:{type:"number",custom:o("number")},lessThanOrEqualTo:{type:"number",custom:o("number")},divisibleBy:{type:"number",custom:o("number")},notDivisibleBy:{type:"number",custom:o("number")},minimumCharacters:{type:"string",custom:o("string")},maximumCharacters:{type:"string",custom:o("string")},minimumLength:{type:"number",custom:o("array")},maximumLength:{type:"number",custom:o("array")},instanceOf:{custom:o("object")},allowUnvalidatedProperties:{type:"boolean",custom:o("object")},custom:{type:"function"},propertySchema:{type:"object",custom:o(["array","object"])}},s={type:"object",propertySchema:i},l={type:"array",allPropertySchema:{type:"object",propertySchema:i}},u=[s,l],c=[a({},s,{custom:o(["array","object"])}),a({},l,{custom:o(["array","object"])})];i.allPropertySchema=c,i.propertySchema.allPropertySchema=u,e.exports=u},function(e,t,r){const a=r(0),n=r(4),o=r(8);e.exports=class Accordion{static get optionsDefault(){return{elements:{bundle:".accordion",item:".accordion__item",trigger:".accordion__trigger",content:".accordion__content",container:".accordion__container"},accessibilityWarnings:!0,closeNestedItems:!1,defaultOpenItems:null,inlineStyles:!0,multipleOpenItems:!0,openAnchoredItems:!0,debug:!1}}static get optionsSchema(){const e=[{type:"string"},{type:"object",instanceOf:[Element,NodeList]},{type:"array",allPropertySchema:[{type:"string"},{type:"object",instanceOf:[Element,NodeList]}]}],t={type:"object",allowUnvalidatedProperties:!1,propertySchema:{elements:{type:"object",allowUnvalidatedProperties:!1,propertySchema:{bundle:e,item:e,trigger:e,content:e,container:e}},accessibilityWarnings:{type:"boolean"},closeNestedItems:{type:"boolean"},defaultOpenItems:[{type:"string"},{type:"number",greaterThanOrEqualTo:0,divisibleBy:1},{type:"object",instanceOf:[Element,NodeList]},{type:"array",allPropertySchema:[{type:"string"},{type:"number",greaterThanOrEqualTo:0,divisibleBy:1},{type:"object",instanceOf:[Element,NodeList]}]}],inlineStyles:{type:"boolean"},multipleOpenItems:{type:"boolean"},openAnchoredItems:{type:"boolean"},debug:{type:"boolean"}}};return new n(t)}static isElement(e){return e instanceof Element&&1===e.nodeType}static getOptionElements(e,t=new Set){if(Array.isArray(e))for(let r of e)this.getOptionElements(r,t);else if("string"==typeof e){let r=document.querySelectorAll(e);this.getOptionElements(r,t)}else if(e instanceof NodeList)for(let r of e)this.getOptionElements(r,t);else e instanceof Element&&1===e.nodeType&&t.add(e);return Array.from(t)}static sortElementsByMostNested(e){if(!Array.isArray(e))throw new Error("`elements` must be an array.");if(!e.every(this.isElement))throw new Error("`elements` array must only contain elements.");const t=e.map((t,r)=>{const a=new Set;return e.forEach((e,n)=>{r!==n&&t.contains(e)&&a.add(e)}),{element:t,contains:a}});t.sort((e,t)=>e.contains.size<t.contains.size?-1:e.contains.size>t.contains.size?1:0);return t.map(e=>e.element)}constructor(e){return this.options=e,this.initializeBundles(),this.debug(this),this}get options(){return void 0!==this._options&&null!==this._options||(this._options=a({},this.constructor.optionsDefault)),this._options}set options(e){return this.constructor.optionsSchema.validate(e),this._options=a(this.options,e),this._options}get bundles(){return this._bundles||(this._bundles=[]),this._bundles}set bundles(e){if(!Array.isArray(e))throw new Error("`bundles` must be an array.");return this._bundles=e,this._bundles}addBundle(e){if(!(e instanceof o))throw new Error("`bundle` must be an instance of the Bundle class.");return this.bundles.find(t=>t.element===e.element)?(this.debug("Bundle was already added."),!1):(this.bundles.push(e),!0)}initializeBundles(){let e=this.constructor.getOptionElements(this.options.elements.bundle);e=this.constructor.sortElementsByMostNested(e),console.log(e)}debug(...e){this.options.debug&&console.log("Accordion Debug:",...e)}}},function(e,t,r){const a=r(9);e.exports=class Bundle{static get instanceCount(){return"number"!=typeof this._instanceCount&&(this._instanceCount=0),this._instanceCount}static set instanceCount(e){if("number"!=typeof e)throw"`instanceCount` must be a number.";return this._instanceCount=e}static instanceCountIncrement(){return this.instanceCount=this.instanceCount+1}constructor(e){return this.id=this.constructor.instanceCountIncrement(),this.accordion=e.accordion,this.element=e.element,this}get accordion(){return this._accordion}set accordion(e){if(!(e instanceof r(7)))throw new Error("`accordion` must be an instance of the Accordion class.");this._accordion=e}get options(){return this.accordion.options}get element(){return this._element}set element(e){if(!this.accordion.constructor.isElement(e))throw new Error("`element` must be an element.");return this._element=e,this._element}get items(){return this._items||(this._items=[]),this._items}set items(e){if(!Array.isArray(e))throw new Error("`items` must be an array.");return this._items=e,this._items}addItem(e){if(!(e instanceof a))throw new Error("`item` must be an instance of the Item class.");return this.items.find(t=>t.element===e.element)?(this.debug("Item was already added."),!1):(this.items.push(e),!0)}}},function(e,t,r){e.exports=class Item{constructor(e){return this.bundle=e.accordion,this.element=e.element,this}get bundle(){return this._bundle}set bundle(e){if(!(e instanceof r(8)))throw new Error("`bundle` must be an instance of the Bundle class.");this._bundle=e}get options(){return this.bundle.accordion.options}get element(){return this._element}set element(e){if(!this.bundle.accordion.constructor.isElement(e))throw new Error("`element` must be an element.");return this._element=e,this._element}}}]);