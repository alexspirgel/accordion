/*!
 * accordion v3.0.0
 * https://github.com/alexspirgel/accordion
 */
var Accordion;(()=>{var e={683:(e,t,n)=>{const r=n(605);e.exports=function(e){return"object"==typeof e&&null!==e&&1===e.nodeType&&!r(e)}},605:e=>{e.exports=function(e){if("object"!=typeof e||null===e||"[object Object]"!==Object.prototype.toString.call(e))return!1;if(null===Object.getPrototypeOf(e))return!0;let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}},364:(e,t,n)=>{const r=n(683);e.exports=function e(t,n=new Set){if(Array.isArray(t)||t instanceof NodeList)for(let r of t)e(r,n);else if("string"==typeof t){e(document.querySelectorAll(t),n)}else r(t)&&n.add(t);return Array.from(n)}},662:(e,t,n)=>{const r=n(160),i=n(683),s=n(364),o=n(768);e.exports=class Accordion{static isAccordion(e){return e instanceof this}static get accordions(){return Array.isArray(this._accordions)||(this._accordions=[]),this._accordions}static set accordions(e){if(!Array.isArray(e))throw new Error("'accordions' must be an array.");if(!e.every(this.isAccordion))throw new Error("'accordions' must only contain instances of Accordion.");this._accordions=e}static addAccordion(e){if(!this.isAccordion(e))throw new Error("'accordion' must be an accordion.");if(this.accordions.includes(e))throw new Error("'accordion' already exists in the array of accordions.");this.accordions.push(e)}static removeAccordion(e){const t=this.accordions.indexOf(e);t>=0&&this.accordions.splice(t,1)}static getAccordionObject(e){for(const t of this.accordions)for(const n of t.bundles){if(e===n.element)return n;for(const t of n.items){if(e===t.element)return t;if(t.header&&e===t.header.element)return t.header;if(t.panel){if(e===t.panel.element)return t.panel;if(t.panel.panelInner&&e===t.panel.panelInner.element)return t.panel.panelInner}}}}static removeExistingAccordionObjectElementsFromArray(e){if(!Array.isArray(e))throw new Error("'elements' must be an array.");return e=e.filter((e=>{if(!this.getAccordionObject(e))return!0}))}static getNestedBundles(e){if(!i(e))throw new Error("'element' must be an element.");const t=[];for(const n of this.accordions)for(const r of n.bundles)i(r.element)&&e.contains(r.element)&&e!==r.element&&t.push(r);return t}static isElementContainedBy(e,t=[],n="and"){if(!i(e))throw new Error("'element' must be an element.");const r=s(t);if("string"!=typeof n)throw new Error("'operator' must be a string.");if("and"!==(n=n.toLowerCase())&&"or"!==n)throw new Error("'operator' must be 'and' or 'or'.");let o=!1;for(const t of r)if(t.contains(e)&&t!==e){if(o=!0,"or"===n)break}else if(o=!1,"and"===n)break;return o}static get defaultOptions(){return{selectors:{bundle:void 0,item:void 0,header:void 0,panel:void 0,panelInner:void 0},defaultOpenItems:void 0,accessibilityWarnings:!0,closeNestedItems:!1,multipleOpenItems:!0,openAnchoredItems:!0,dataAttributes:{elementType:"data-accordion",itemState:"data-accordion-state"},debug:!1}}static get optionsValidation(){const e=({value:e,pathId:t})=>{if("string"!=typeof e&&void 0!==e)throw new Error(`'${t}' must be a string or undefined.`)},t=({value:e,pathId:t})=>{if("boolean"!=typeof e)throw new Error(`'${t}' must be a boolean.`)},n=({value:e,pathId:t})=>{if("string"!=typeof e)throw new Error(`'${t}' must be a string.`)};return{selectors:({value:e,pathId:t})=>{if(("object"!=typeof e||null===e)&&void 0!==e)throw new Error(`'${t}' must be an object or undefined.`)},"selectors.bundle":e,"selectors.item":e,"selectors.header":e,"selectors.panel":e,"selectors.panelInner":e,defaultOpenItems:({value:e,pathId:t})=>{if("number"!=typeof e&&"string"!=typeof e&&("object"!=typeof e||null===e)&&void 0!==e)throw new Error(`'${t}' must be an number (zero indexed), selector string, element reference, or undefined.`)},accessibilityWarnings:t,closeNestedItems:t,multipleOpenItems:t,openAnchoredItems:t,dataAttributes:({value:e,pathId:t})=>{if("object"!=typeof e||null===e)throw new Error(`'${t}' must be an object.`)},"dataAttributes.elementType":n,"dataAttributes.itemState":n,debug:t}}constructor(e={}){if(this.options=new r(this.constructor.defaultOptions,this.constructor.optionsValidation),this.options.merge(e),this.constructor.addAccordion(this),!this.initialized){const e=this.options.get("selectors.bundle"),t=this.options.get("selectors.item"),n=this.options.get("selectors.header"),r=this.options.get("selectors.panel"),s=this.options.get("selectors.panelInner"),o=[],a=[],c=[],l=[],h=[];if(e){let t=Array.from(document.querySelectorAll(e));t=this.constructor.removeExistingAccordionObjectElementsFromArray(t);for(const e of t){const t=this.addBundle({element:e});o.push(t)}}if(t)for(const e of o){let n=Array.from(e.element.querySelectorAll(t));n=this.constructor.removeExistingAccordionObjectElementsFromArray(n);const r=this.constructor.getNestedBundles(e.element),s=[];for(const e of r)i(e.element)&&s.push(e.element);n=n.filter((e=>!this.constructor.isElementContainedBy(e,s,"or")));for(const t of n){const n=e.addItem({element:t});a.push(n)}}if(n)for(const e of a){let t=e.element.querySelector(n);if(t){const n=e.addHeader({element:t});c.push(n)}}if(r)for(const e of a){let t=e.element.querySelector(r);if(t){const n=e.addPanel({element:t});l.push(n)}}if(s)for(const e of l){let t=e.element.querySelector(s);if(t){const n=e.addPanelInner({element:t});h.push(n)}}this.initialized=!0}this.log(this)}get bundles(){return Array.isArray(this._bundles)||(this._bundles=[]),this._bundles}set bundles(e){if(!Array.isArray(e))throw new Error("'bundles' must be an array.");if(!e.every(o.isBundle))throw new Error("'bundles' must only contain instances of Bundle.");this._bundles=e}addBundle({element:e,items:t}){const n=new o({accordion:this,element:e,items:t});return this.bundles.push(n),n}removeBundle(e){const t=this.bundles.indexOf(e);if(t>=0)return this.bundles.splice(t,1),e}destroy(){for(const e of this.bundles)e.destroy();this.constructor.removeAccordion(this)}log(...e){this.options.get("debug")&&console.log("Accordion:",...e)}}},768:(e,t,n)=>{const r=n(683),i=n(87);e.exports=class Bundle{static isBundle(e){return e instanceof this}constructor({accordion:e,element:t,items:n}){this.accordion=e,this.element=t,Array.isArray(n)&&this.addItems(n)}get options(){if(this.accordion)return this.accordion.options}get accordion(){return this._accordion}set accordion(e){if(this.initialized)throw new Error("The 'accordion' property should not be changed after construction. Instead, destroy the instance and create a new one.");if(!n(662).isAccordion(e))throw new Error("'accordion' must be an instance of the 'Accordion' class.");this._accordion=e}get element(){return this._element}set element(e){if(!r(e))throw new Error("'element' must be an element.");if(this.accordion.constructor.getAccordionObject(e))throw new Error("'element' is already used in an accordion.");e.setAttribute(this.accordion.options.get("dataAttributes.elementType"),"bundle"),this._unsetElement(),this._element=e}_unsetElement(){r(this.element)&&this.element.removeAttribute(this.accordion.options.get("dataAttributes.elementType")),this._element=void 0}get items(){return Array.isArray(this._items)||(this._items=[]),this._items}set items(e){if(!Array.isArray(e))throw new Error("'items' must be an array.");if(!e.every(i.isItem))throw new Error("'items' must only contain instances of Item.");this._items=e}addItem({element:e,header:t,panel:n,panelInner:r}){const s=new i({bundle:this,element:e,header:t,panel:n,panelInner:r});return this.items.push(s),s}addItems(e){const t=[];if(!Array.isArray(e))throw new Error("'items' must be an array.");for(const n of e){const e=this.addItem(n);t.push(e)}return t}removeItem(e){const t=this.items.indexOf(e);if(t>=0)return this.items.splice(t,1),e}destroy(){for(const e of this.items)e.destroy();this._unsetElement(),this.accordion.removeBundle(this)}}},239:(e,t,n)=>{const r=n(683);e.exports=class Header{static isHeader(e){return e instanceof this}constructor({item:e,element:t}){this.item=e,this.element=t,this.initialized=!0}get options(){if(this.accordion)return this.accordion.options}get accordion(){if(this.bundle)return this.bundle.accordion}get bundle(){if(this.item)return this.item.bundle}get item(){return this._item}set item(e){if(this.initialized)throw new Error("The 'item' property should not be changed after construction. Instead, destroy the instance and create a new one.");if(!n(87).isItem(e))throw new Error("'item' must be an instance of the 'Item' class.");this._item=e}get element(){return this._element}set element(e){if(!r(e))throw new Error("'element' must be an element.");if(this.accordion.constructor.getAccordionObject(e))throw new Error("'element' is already used in an accordion.");e.setAttribute(this.accordion.options.get("dataAttributes.elementType"),"header"),this._unsetElement(),this._element=e}_unsetElement(e){r(this.element)&&e.removeAttribute(this.accordion.options.get("dataAttributes.elementType")),this._element=void 0}destroy(){this._unsetElement(),this.item&&this.item.header===this&&(this.item.header=void 0)}}},87:(e,t,n)=>{const r=n(683),i=n(239),s=n(426);e.exports=class Item{static isItem(e){return e instanceof this}constructor({bundle:e,element:t,header:n,panel:i,panelInner:s}){this.bundle=e,this.element=t,r(n)&&this.addHeader({element:n}),r(i)&&this.addPanel({element:i,panelInner:s}),this.initialized=!0}get options(){if(this.accordion)return this.accordion.options}get accordion(){if(this.bundle)return this.bundle.accordion}get bundle(){return this._bundle}set bundle(e){if(this.initialized)throw new Error("The 'bundle' property should not be changed after construction. Instead, destroy the instance and create a new one.");if(!n(768).isBundle(e))throw new Error("'bundle' must be an instance of the 'Bundle' class.");this._bundle=e}get element(){return this._element}set element(e){if(!r(e))throw new Error("'element' must be an element.");if(this.accordion.constructor.getAccordionObject(e))throw new Error("'element' is already used in an accordion.");e.setAttribute(this.accordion.options.get("dataAttributes.elementType"),"item"),this._unsetElement(),this._element=e}_unsetElement(e){r(this.element)&&e.removeAttribute(this.accordion.options.get("dataAttributes.elementType")),this._element=void 0}get header(){return this._header}set header(e){if(!i.isHeader(e)&&void 0!==typeof e)throw new Error("'header' must be an instance of Header or undefined.");const t=this._header;e!==t&&(this._header=e,i.isHeader(t)&&t.destroy())}addHeader({element:e}){const t=new i({item:this,element:e});return this.header=t,t}get panel(){return this._panel}set panel(e){if(!s.isPanel(e)&&void 0!==typeof e)throw new Error("'panel' must be an instance of Panel or undefined.");const t=this._panel;e!==t&&(this._panel=e,s.isPanel(t)&&t.destroy())}addPanel({element:e,panelInner:t}){const n=new s({item:this,element:e,panelInner:t});return this.panel=n,n}destroy(){this.header&&this.header.destroy(),this.panel&&this.panel.destroy(),this._unsetElement(),this.bundle.removeItem(this)}}},160:e=>{e.exports=class ObjectManager{static isString(e){return"string"==typeof e}static isObject(e){return"object"==typeof e&&null!==e}static normalizePath(e){if("string"==typeof e&&(e=e.split(".")),Array.isArray(e)&&e.every(this.isString))return e;throw new Error("'path' must be either a string or an array of strings.")}static getPathId(e){return(e=this.normalizePath(e)).join(".")}static getObjectProperty(e,t,n){let r=e;if((t=this.normalizePath(t)).length>0)for(const e of t){if(!this.isObject(r)){r=void 0;break}r=r[e]}return void 0!==r?r:n}static setObjectProperty(e,t,n){let r=!1;if((t=this.normalizePath(t)).length>0){const i=t[t.length-1];for(const s of t){if(!this.isObject(e))break;s===i?(e[s]=n,r=!0):e=e[s]}}return r}static get eventListenerTypes(){return["get","set","change"]}static validateEventListenerType(e){if(!this.eventListenerTypes.includes(e))throw new Error(`type '${e}' is not a valid type.`)}static merge(e,t=[],n){if(Array.isArray(n)){e.set(t,[]);for(let r=0;r<n.length;r++)t.push(r),e.set(t,this.merge(e,t,n[r])),t.splice(-1)}else if(this.isObject(n)){this.isObject(this.getObjectProperty(e.object,t))||e.set(t,{});for(let r in n)t.push(r),e.set(t,this.merge(e,t,n[r])),t.splice(-1)}else void 0!==n&&e.set(t,n);return this.getObjectProperty(e.object,t)}constructor(e,t){this.validation=t,this.object=e}get object(){return this._object}set object(e){this._object={},this.merge(e)}get validation(){return this._validation}set validation(e){if(!this.constructor.isObject(e)&&void 0!==e)throw new Error("'validation' must be an object or undefined.");this._validation=e}validatePropertyValue(e,t){e=this.constructor.normalizePath(e);const n=this.constructor.getPathId(e);this.constructor.isObject(this.validation)&&"function"==typeof this.validation[n]&&this.validation[n]({value:t,path:e,pathId:n,object:this.object})}get(e,t){e=this.constructor.normalizePath(e);const n=this.constructor.getObjectProperty(this.object,e,t);return this.dispatchEvent(e,"get",{object:this.object,path:e,type:"get",value:n}),n}set(e,t){this.validatePropertyValue(e,t),e=this.constructor.normalizePath(e);const n=this.constructor.getObjectProperty(this.object,e),r=this.constructor.setObjectProperty(this.object,e,t);return r&&(this.dispatchEvent(e,"set",{object:this.object,path:e,type:"set",value:t,previousValue:n}),t!==n&&this.dispatchEvent(e,"change",{object:this.object,path:e,type:"change",value:t,previousValue:n})),r}merge(e){if(!this.constructor.isObject(e))throw new Error("'object' must be an object.");this.constructor.merge(this,[],e)}get eventListeners(){return this.constructor.isObject(this._eventListeners)||(this._eventListeners={}),this._eventListeners}addEventListener(e,t,n){const r=this.constructor.getPathId(e);if(this.constructor.validateEventListenerType(t),"function"!=typeof n)throw new Error("callback must be a function.");this.eventListeners[r]||(this.eventListeners[r]=[]);const i={type:t,callback:n};this.eventListeners[r].push(i)}dispatchEvent(e,t,n){e=this.constructor.normalizePath(e);const r=this.constructor.getPathId(e);if(this.constructor.validateEventListenerType(t),Array.isArray(this.eventListeners[r])){void 0===n&&(n={object:this.object,path:e,type:t});for(const e of this.eventListeners[r])e.type===t&&e.callback(n)}}removeEventListener(e,t,n){const r=this.constructor.getPathId(e);if(Array.isArray(this.eventListeners[r]))for(let e=0;e<this.eventListeners[r].length;e++){const i=this.eventListeners[r][e];t===i.type&&n===i.callback&&this.eventListeners[r].splice(e,1)}}}},813:(e,t,n)=>{const r=n(683);e.exports=class PanelInner{static isPanelInner(e){return e instanceof this}constructor({panel:e,element:t}){this.panel=e,this.element=t,this.initialized=!0}get options(){if(this.accordion)return this.accordion.options}get accordion(){if(this.bundle)return this.bundle.accordion}get bundle(){if(this.item)return this.item.bundle}get item(){if(this.panel)return this.panel.item}get panel(){return this._panel}set panel(e){if(this.initialized)throw new Error("The 'panel' property should not be changed after construction. Instead, destroy the instance and create a new one.");if(!n(426).isPanel(e))throw new Error("'panel' must be an instance of the 'Panel' class.");this._panel=e}get element(){return this._element}set element(e){if(!r(e))throw new Error("'element' must be an element.");if(this.accordion.constructor.getAccordionObject(e))throw new Error("'element' is already used in an accordion.");e.setAttribute(this.accordion.options.get("dataAttributes.elementType"),"panel-inner"),this._unsetElement(),this._element=e}_unsetElement(e){r(this.element)&&e.removeAttribute(this.accordion.options.get("dataAttributes.elementType")),this._element=void 0}destroy(){this._unsetElement(),this.panel&&this.panel.panelInner===this&&(this.panel.panelInner=void 0)}}},426:(e,t,n)=>{const r=n(683),i=n(813);e.exports=class Panel{static isPanel(e){return e instanceof this}constructor({item:e,element:t,panelInner:n}){this.item=e,this.element=t,r(n)&&this.addPanelInner({element:n}),this.initialized=!0}get options(){if(this.accordion)return this.accordion.options}get accordion(){if(this.bundle)return this.bundle.accordion}get bundle(){if(this.item)return this.item.bundle}get item(){return this._item}set item(e){if(this.initialized)throw new Error("The 'item' property should not be changed after construction. Instead, destroy the instance and create a new one.");if(!n(87).isItem(e))throw new Error("'item' must be an instance of the 'Item' class.");this._item=e}get element(){return this._element}set element(e){if(!r(e))throw new Error("'element' must be an element.");if(this.accordion.constructor.getAccordionObject(e))throw new Error("'element' is already used in an accordion.");e.setAttribute(this.accordion.options.get("dataAttributes.elementType"),"panel"),this._unsetElement(),this._element=e}_unsetElement(e){r(this.element)&&e.removeAttribute(this.accordion.options.get("dataAttributes.elementType")),this._element=void 0}get panelInner(){return this._panelInner}set panelInner(e){if(!i.isPanelInner(e)&&void 0!==e)throw new Error("'panelInner' must be an instance of PanelInner or undefined.");const t=this._panelInner;e!==t&&(this._panelInner=e,i.isPanelInner(t)&&t.destroy())}addPanelInner({element:e}){const t=new i({panel:this,element:e});return this.panelInner=t,t}destroy(){i.isPanelInner(this.panelInner)&&this.panelInner.destroy(),this._unsetElement(),this.item&&this.item.panel===this&&(this.item.panel=void 0)}}}},t={};var n=function n(r){var i=t[r];if(void 0!==i)return i.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}(662);Accordion=n})();